esphome:
  name: esp-energy

esp32:
  board: esp32dev
  framework:
    type: arduino

globals:
   - id: water_alert
     type: int
     restore_value: no
     initial_value: '0'
   - id: gaz_alert
     type: int
     restore_value: no
     initial_value: '0'

# Enable logging
logger:
  level : INFO

web_server:
  port: 80
  auth:
   username: admin
   password: !secret web_server_password

ota:
  password: !secret ota_password

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO17_OUT
  phy_addr: 0
  
mqtt:
  broker: !secret mqtt_ip
  username : !secret mqtt_username
  password : !secret mqtt_password
  
http_request:
  useragent: esphome/device
  timeout: 2s

text_sensor:
  - platform: version
    name: "Firmware control"
    
time:
  - platform: sntp
    servers: !secret ntp_ip
    on_time_sync:
      then:
        - logger.log: "Synchronized system clock"
    on_time:
      - minutes: 0
        hours: 0
        then:
          - logger.log: "Reset counter"
          - pulse_meter.set_total_pulses:
              id: "water"
              value: 0
          - pulse_meter.set_total_pulses:
              id: "gas"
              value: 0

sensor:
 - platform: pulse_meter
   pin:
      number: 13
      mode: INPUT_PULLUP
   id: "water"
   name: "Instant water consumption"
   unit_of_measurement: "L/min"
   timeout: 60s
   internal_filter: 50ms
   accuracy_decimals: 2
   filters:
    - lambda: return x;
   on_value_range:
     - bellow: 0
       then:
         condition:
           - lambda: return id(water_alert) == 1;
         then:
          - globals.set:
            id: water_alert
            value: '0'
          - logger.log: Alert end for water
          - http_request.post:
              url: !secret ntfy_url
              headers:
                Content-Type: text/plain
                Tags: white_check_mark,droplet
                Priority: default
                Title: Evenèment
                Authorization: !secret ntfy_auth
              verify_ssl: false
              body: '{"topic":"loic","message":"Fin alerte sur la consommation d\'eau"}'
     - above: 0
       then:
        condition:
          for:
            time: 20min
            condition:
              sensor.in_range:
                id: water
                above: 0
        then:
          - globals.set:
            id: water_alert
            value: '1'
          - logger.log: Alert start for water
          - http_request.post:
              url: !secret ntfy_url
              headers:
                Content-Type: text/plain
                Tags: warning,droplet
                Priority: urgent
                Title: Evenèment
                Authorization: !secret ntfy_auth
              verify_ssl: false
              body: '{"topic":"loic","message":"Alerte sur la consommation d\'eau supérieure à 0 pendant plus de 20min"}'
   total:
    name: "Total water consumption"
    unit_of_measurement: "m³"
    device_class: "water"
    accuracy_decimals: 2
    filters:
    - lambda: return (x * 0.001);

 - platform: pulse_meter
   pin:
      number: 14
      mode: INPUT_PULLUP
   id: "gas"
   name: "Instant gas consumption"
   unit_of_measurement: "L/min"
   timeout: 60s
   internal_filter: 200ms
   accuracy_decimals: 2
   filters:
    - lambda: return (x * 10);
   on_value_range:
     - bellow: 0
       then:
         condition:
           - lambda: return id(gas_alert) == 1;
         then:
          - globals.set:
            id: gas_alert
            value: '0'
          - logger.log: Alert end for water
          - http_request.post:
              url: !secret ntfy_url
              headers:
                Content-Type: text/plain
                Tags: white_check_mark,droplet
                Priority: default
                Title: Evenèment
                Authorization: !secret ntfy_auth
              verify_ssl: false
              body: '{"topic":"loic","message":"Fin alerte sur la consommation de gaz"}'
     - above: 0
       then:
        condition:
          for:
            time: 20min
            condition:
              sensor.in_range:
                id: water
                above: 0
        then:
          - globals.set:
            id: gas_alert
            value: '1'
          - logger.log: Alert start for water
          - http_request.post:
              url: !secret ntfy_url
              headers:
                Content-Type: text/plain
                Tags: warning,droplet
                Priority: urgent
                Title: Evenèment
                Authorization: !secret ntfy_auth
              verify_ssl: false
              body: '{"topic":"loic","message":"Alerte sur la consommation de gaz supérieure à 0 pendant plus de 20min"}'
   total:
    name: "Total gas consumption"
    unit_of_measurement: "m³"
    device_class: "gas"
    accuracy_decimals: 2
    filters:
      - lambda: return (x * 0.01);
    
